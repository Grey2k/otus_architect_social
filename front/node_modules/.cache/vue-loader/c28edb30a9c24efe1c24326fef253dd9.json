{"remainingRequest":"/Users/vvdudov/projects/edu/otus/arch/social/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vvdudov/projects/edu/otus/arch/social/front/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vvdudov/projects/edu/otus/arch/social/front/src/views/Profile.vue","mtime":1602008382515},{"path":"/Users/vvdudov/projects/edu/otus/arch/social/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vvdudov/projects/edu/otus/arch/social/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/vvdudov/projects/edu/otus/arch/social/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vvdudov/projects/edu/otus/arch/social/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBVc2VyU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy91c2VyLnNlcnZpY2UiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQcm9maWxlIiwKICBkYXRhOiAoKSA9PiAoewogICAgcHJvZmlsZTogW10sCiAgfSksCgogIGNvbXB1dGVkOiB7CiAgICBjdXJyZW50VXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmF1dGgudXNlcjsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgaWYgKCF0aGlzLmN1cnJlbnRVc2VyKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvbG9naW4iKTsKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICBVc2VyU2VydmljZS5nZXRNeVByb2ZpbGUoKS50aGVuKAogICAgICAocmVzcG9uc2UpID0+IHsKICAgICAgICB0aGlzLnByb2ZpbGUgPSByZXNwb25zZS5kYXRhOwogICAgICB9LAogICAgICAoZXJyb3IpID0+IHsKICAgICAgICB0aGlzLmNvbnRlbnQgPQogICAgICAgICAgKGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEpIHx8CiAgICAgICAgICBlcnJvci5tZXNzYWdlIHx8CiAgICAgICAgICBlcnJvci5lcnJvci50b1N0cmluZygpOwogICAgICB9CiAgICApOwogIH0KfTsK"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <h3>My Profile</h3>\n    <ul class=\"list-group list-group-flush\">\n      <li class=\"list-group-item\"><strong>Id:</strong> {{ profile.id}}</li>\n      <li class=\"list-group-item\"><strong>Email:</strong> {{ profile.email}}</li>\n      <li class=\"list-group-item\"><strong>First name:</strong> {{ profile.first_name}}</li>\n      <li class=\"list-group-item\"><strong>Last name:</strong> {{ profile.last_name}}</li>\n      <li class=\"list-group-item\"><strong>Birth date:</strong> {{ profile.birth_date}}</li>\n      <li class=\"list-group-item\"><strong>Sex:</strong> {{ profile.sex}}</li>\n      <li class=\"list-group-item\"><strong>Interest:</strong> {{ profile.interest}}</li>\n      <li class=\"list-group-item\"><strong>City:</strong> {{ profile.city}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport UserService from \"../services/user.service\";\n\nexport default {\n  name: \"Profile\",\n  data: () => ({\n    profile: [],\n  }),\n\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n  },\n  mounted() {\n    if (!this.currentUser) {\n      this.$router.push(\"/login\");\n    }\n  },\n  created() {\n    UserService.getMyProfile().then(\n      (response) => {\n        this.profile = response.data;\n      },\n      (error) => {\n        this.content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.error.toString();\n      }\n    );\n  }\n};\n</script>"]}]}